Задача: Написать приложение на java spring boot.
1. Приложение должно использовать следующий стек технологий: java spring boot, БД postgress, Spring Data JPA, Thymeleaf

2. Приложение должно иметь подключение к БД postgres SQL. Данные для подключения:
spring.datasource.url=jdbc:postgresql://localhost:5433/testDB
spring.datasource.username=vi
spring.datasource.password=12345
spring.datasource.driver-class-name=org.postgresql.Driver

3. Приложение должно иметь следующие html страницы: 
3.1. Страница с кнопками регистрации и авторизации. Эта страница загружается первой - эндпоинт /
3.2. Страница регистрации. На эту страницу пользователь переходит, когда нажимает на кнопку регистрации. На странице регистрации вводятся логин и пароль пользователя. Осуществляется проверка. Если пользователь с таким логином ужк есть в БД, выводится сообщение об ошибке. Редирект не происходит, пользователь может продолжать пробовать зарегестрироваться. Если логин уникален, пользователь регистрируется в БД, пароль хэшируется; пользователь редиректом переходит на страницу данных пользователя.
3.3. Страница авторизации. На эту страницу пользователь переходит, когда нажимает на кнопку авторизации. На странице авторизации есть поля Логин и Пароль; кнопка Войти. Пользователь вводит логин и пароль, затем нажимает кнопку войти. Проверяется наличие логина и соответствующего пароля в БД. Если логин и пароль совпадают - пользователь редиректом переходит на страницу данных пользователя. Если логин совпадает, но пароль не совпадает - выводить сообщение "Данные не совпадают". Должен вестись учет успешных и не успешных попыток входа, а так же время аутентификации. Если вход был успешным, счетчик неуспешных попыток входа сбрасывается на 0. Если логин совпадает, пароль не верен, то счетчик неуспешных попыток входа увеличивается на 1 и записывается последнее время неуспешной попытки залогиниться. Если количество неудачных попыток будет равно 5 - пользователь с таким логином отправляется в блок на 30 минут. По истечению 30 минут счетчик неуспешных попыток входа сбрасывается и блок снимается. Если пользователь пробует войти, но находится в блоке - ему выдается предупреждение, что он в блоке и указывается оставшееся время блока.
3.4. Страница данных пользователя. На эту страницу пользователь переходит если попытка входа была успешной. На странице должны быть кнопки Выйти и Удалить аккаунт. Если пользователь нажимает на кнопку Выйти, то сессия прекращается, нужно будет заново входить в веб приложение. Если пользователь нажимает на кнопку Удалить аккаунт, то сессия прекращается, данные пользователя удаляются. 
На страние должны быть все данные пользователя. Количество успешных и неуспешных попыток входа реализовать ввиде таблицы. Реализовать пейджирование по 10 записей.

4. Стили страниц писать в отдельные файлы

5. Должна быть реализована многотабличная архитектура: сущность User и сущность SignInCount. Реализация 1 ко многим

6. Напиши скрипт для вставки тестовых пользователей в БД. Должно быть 3 пользователя

7. Напиши файл readme.md, где будет написана подробное описание о работе приложения

8. За основу используй проект secure1, находишься в его директории. Если понадобиться, добавь недостающие зависимости.
